name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '8.15.0'

jobs:
  # Cache dependencies and build artifacts
  cache:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: ~/.nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json', '**/package.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nx-

  # Lint all projects
  lint:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: ~/.nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json', '**/package.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Run linting
        run: pnpm lint

      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: lint-results
          path: |
            **/eslint-report.json
            **/eslint-report.html

  # Type check all projects
  type-check:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: ~/.nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json', '**/package.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Run type checking
        run: pnpm type-check

  # Test all projects
  test:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: ~/.nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json', '**/package.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Run tests
        run: pnpm test

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            **/coverage/
            **/test-results/
            **/junit.xml

  # Build all projects
  build:
    runs-on: ubuntu-latest
    needs: [lint, type-check, test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: ~/.nx/cache
          key: ${{ runner.os }}-nx-${{ hashFiles('**/nx.json', '**/package.json', '**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Build all projects
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/dist/
            **/.next/
            **/build/

  # Security audit
  security:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

  # Summary job
  ci-success:
    runs-on: ubuntu-latest
    needs: [lint, type-check, test, build, security]
    if: always()
    steps:
      - name: CI Status
        run: |
          echo "âœ… CI Pipeline completed successfully!"
          echo "All checks passed:"
          echo "- Linting: ${{ needs.lint.result }}"
          echo "- Type checking: ${{ needs.type-check.result }}"
          echo "- Testing: ${{ needs.test.result }}"
          echo "- Building: ${{ needs.build.result }}"
          echo "- Security: ${{ needs.security.result }}"
